name: CI

on:
  push:
    branches:
      - develop
    tags:
      - '*'

  workflow_dispatch:

env:
  DOCKER_REG: biryukovpyu
  APP_IMAGE_NAME: TS_docker
  APP_VERSION: MatriX.106

jobs:
  build:
    name: Build ${{ matrix.arch.name }} TorrServer image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - { "name": "linux/386", "tor-server-name": "linux-386" }
          - { "name": "linux/amd64", "tor-server-name": "linux-amd64" }
          - { "name": "linux/arm64/v8", "tor-server-name": "linux-arm64" }
          - { "name": "linux/arm/v7", "tor-server-name": "linux-arm7" }

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download TorrServer-${{ env.APP_VERSION }}
        run: |
          sudo apt update
          sudo apt install -y wget
          wget -O TorrServer "https://github.com/YouROK/TorrServer/releases/download/${{ env.APP_VERSION }}/TorrServer-${{ matrix.arch.tor-server-name }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REG }}/${{ matrix.arch.tor-server-name }}-${{ env.APP_IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ matrix.arch.name }} 
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}/${{ matrix.arch.name }} 
          cache-to: type=inline

  publish_container:
    name: Publish meta container
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REG }}/${{ env.APP_IMAGE_NAME }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Meta Image
        run: |
          docker manifest create "${{ steps.meta.outputs.tags }}" \
            "${{ env.DOCKER_REG }}/linux-386-${{ env.APP_IMAGE_NAME }}" \
            "${{ env.DOCKER_REG }}/linux-amd64-${{ env.APP_IMAGE_NAME }}" \
            "${{ env.DOCKER_REG }}/linux-arm64-${{ env.APP_IMAGE_NAME }}" \
            "${{ env.DOCKER_REG }}/linux-arm7-${{ env.APP_IMAGE_NAME }}"

          docker manifest push "${{ steps.meta.outputs.tags }}"
